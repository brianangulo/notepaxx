name: Build and Release to GH releases

on:
  push:
    branches: ['main']

jobs:
  build:
    name: Build using xcodebuild command
    runs-on: macos-latest
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Import signing certificate
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          SECURITY_IDENTITY: ${{ secrets.SECURITY_IDENTITY }}
        run: |
          KEYCHAIN_FILE=default.keychain
          KEYCHAIN_PASSWORD=myvoiceismypassport
          security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_FILE
          security default-keychain -s $KEYCHAIN_FILE
          security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_FILE
          security import <(echo $MACOS_CERTIFICATE | base64 --decode) \
                          -f pkcs12 \
                          -k $KEYCHAIN_FILE \
                          -P $MACOS_CERTIFICATE_PWD \
                          -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k $KEYCHAIN_PASSWORD $KEYCHAIN_FILE
      - name: Build
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          mkdir app
          xcodebuild -scheme notepaxx install DSTROOT=app | xcpretty
      - name: Packaging as DMG
        run: |
          hdiutil create \
                  -fs HFS+ \
                  -srcfolder "./app/Applications/notepaxx.app" \
                  -volname "notepaxxapp" "./app/notepaxxapp.dmg"
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: notepaxxapp
          path: app/notepaxxapp.dmg

  release-app:
    name: Release App
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download site content
        uses: actions/download-artifact@v3
        with:
          name: notepaxxapp
      - name: Create GH release
        id: creates_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.${{ github.run_number }}.0
          release_name: v1.${{ github.run_number }}.0
      - name: Upload release artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.creates_release.outputs.upload_url }}
          asset_path: ./notepaxxapp.dmg
          asset_name: notepaxxapp-v1.${{ github.run_number }}.0.dmg
          asset_content_type: application/dmg
